{"version":3,"sources":["picker/arrow/Arrow.tsx","picker/note/Note.tsx","picker/Picker.tsx","serialize.ts","Button.tsx","App.tsx","usePlayer.tsx","transform.ts","reportWebVitals.ts","index.tsx"],"names":["Arrow","direction","disabled","onClick","className","clsx","CLASSMAP","x","G3","A3","B3","C4","D4","E4","F4","G4","A4","B4","C5","D5","E5","Note","onUp","onDown","value","noteClassName","data-name","newValue","Tone","transpose","toNote","indexOf","Picker","melody","onChange","pickersCells","map","idx","order","SERIALMAP","DESERIALMAP","Object","keys","reduce","acc","cv","Button","props","children","App","useState","pick","setpick","isCopied","setIsCopied","player","synth","setSynth","isPlaying","setIsPlaying","useEffect","bpm","stop","_synth","envelope","attack","decay","release","releaseCurve","toDestination","play","scheduleOnce","t","cancel","values","result","currentTime","i","length","duration","push","note","time","transform","s","forEach","n","triggerAttackRelease","start","usePlayer","params","URLSearchParams","window","location","search","has","split","deserialize","get","href","target","rel","slice","serialized","join","navigator","clipboard","writeText","protocol","host","then","confirmation","visible","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.916426a7.chunk.js","sourcesContent":["import clsx from \"clsx\";\nimport React from \"react\";\nimport \"./arrow.css\";\n\ntype ArrowProps = {\n  direction: \"up\" | \"down\";\n  disabled?: boolean;\n  onClick: () => void;\n};\n\nexport default function Arrow({\n  direction,\n  disabled = false,\n  onClick,\n}: ArrowProps) {\n  return (\n    <button\n      className={clsx(\"Arrow\", direction)}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      <i className={clsx(\"fas\", `fa-angle-double-${direction}`)}></i>\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport clsx from \"clsx\";\nimport * as Tone from \"tone\";\nimport Arrow from \"../arrow/Arrow\";\n\nimport \"./note.scss\";\n\nconst CLASSMAP: { [name: string]: string } = {\n  x: \"x\",\n  \"-\": \"r\",\n  G3: \"g\",\n  A3: \"a\",\n  B3: \"b\",\n  C4: \"c\",\n  D4: \"d\",\n  E4: \"e\",\n  F4: \"f\",\n  G4: \"G\",\n  A4: \"A\",\n  B4: \"B\",\n  C5: \"C\",\n  D5: \"D\",\n  E5: \"E\",\n};\n\ntype NoteProps = {\n  onUp: (newValue: string) => void;\n  onDown: (newValue: string) => void;\n  value: string;\n  order: number;\n};\n\nconst Note = ({ onUp, onDown, value }: NoteProps) => {\n  const goUp = () => {\n    if (value === \"x\") {\n      onUp(\"-\");\n    } else if (value === \"-\") {\n      onUp(\"G3\");\n    } else if (value === \"E5\") {\n    } else {\n      let newValue = Tone.Frequency(value);\n      do {\n        newValue = newValue.transpose(1);\n      } while (newValue.toNote().indexOf(\"#\") !== -1);\n      onUp(newValue.toNote());\n    }\n  };\n\n  const goDown = () => {\n    if (value === \"G3\") {\n      onDown(\"-\");\n    } else if (value === \"-\") {\n      onDown(\"x\");\n    } else if (value === \"x\") {\n    } else {\n      let newValue = Tone.Frequency(value);\n      do {\n        newValue = newValue.transpose(-1);\n      } while (newValue.toNote().indexOf(\"#\") !== -1);\n      onUp(newValue.toNote());\n    }\n  };\n\n  const noteClassName: string = CLASSMAP[value];\n  return (\n    <div className={clsx(\"Note\", noteClassName)} data-name={value}>\n      <Arrow onClick={goUp} direction={\"up\"} disabled={value === \"E5\"} />\n      <Arrow onClick={goDown} direction={\"down\"} disabled={value === \"x\"} />\n    </div>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\nimport { Melody } from \"../transform\";\nimport Note from \"./note/Note\";\n\nimport \"./picker.scss\";\n\ntype PickerProps = {\n  melody: Melody;\n  onChange: (idx: number, newValue: string) => void;\n};\n\nexport default function Picker({ melody, onChange }: PickerProps) {\n  const pickersCells = melody.map((value, idx) => (\n    <Note\n      onDown={(newValue: string) => onChange(idx, newValue)}\n      onUp={(newValue: string) => onChange(idx, newValue)}\n      value={value}\n      key={idx}\n      order={idx}\n    />\n  ));\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"Picker-inner\">{pickersCells}</div>\n    </div>\n  );\n}\n","import { Melody } from \"./transform\";\n\ntype SerializationMap = { [note: string]: string };\n\nconst SERIALMAP: SerializationMap = {\n  x: \"x\",\n  \"-\": \"r\",\n  G3: \"g\",\n  A3: \"a\",\n  B3: \"b\",\n  C4: \"c\",\n  D4: \"d\",\n  E4: \"e\",\n  F4: \"f\",\n  G4: \"G\",\n  A4: \"A\",\n  B4: \"B\",\n  C5: \"C\",\n  D5: \"D\",\n  E5: \"E\",\n};\n\nconst DESERIALMAP: SerializationMap = Object.keys(SERIALMAP).reduce(\n  (acc: SerializationMap, cv: string) => {\n    acc[SERIALMAP[cv]] = cv;\n    return acc;\n  },\n  {} as SerializationMap\n);\n\nconst serialize = (melody: Melody): string =>\n  melody.map((n) => SERIALMAP[n]).join('');\n\nconst deserialize = (melody: string): Melody | null => {\n  if (melody.length === 16) {\n    return melody.split(\"\").map((n) => DESERIALMAP[n]) as Melody;\n  } else {\n    return null;\n  }\n};\n\nexport { serialize, deserialize };\n","import \"./button.scss\";\n\ntype ButtonProps = {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  disabled: boolean;\n  children: React.ReactNode;\n};\nexport function Button(props: ButtonProps) {\n  return (\n    <button\n      onClick={props.onClick}\n      disabled={props.disabled}\n      className=\"Button\"\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Melody } from \"./transform\";\nimport Picker from \"./picker/Picker\";\n\nimport \"minireset.css/minireset.sass\";\nimport \"./App.scss\";\nimport usePlayer from \"./usePlayer\";\nimport { useEffect } from \"react\";\nimport { deserialize, serialize } from \"./serialize\";\nimport { Button } from \"./Button\";\nimport clsx from \"clsx\";\n\nfunction App() {\n  const init: Melody = [\n    \"x\",\n    \"-\",\n    \"G3\",\n    \"A3\",\n    \"B3\",\n    \"C4\",\n    \"D4\",\n    \"E4\",\n    \"x\",\n    \"G4\",\n    \"A4\",\n    \"B4\",\n    \"C5\",\n    \"D5\",\n    \"E5\",\n    \"E5\",\n  ];\n  const [pick, setpick] = useState<Melody>(init);\n  const [isCopied, setIsCopied] = useState(false);\n  const player = usePlayer();\n\n  // On load parse the query string to see if it contains the serialized melody. No cleanup needed.\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    if (params.has(\"play\")) {\n      const melody = deserialize(params.get(\"play\")!);\n      if (melody) setpick(melody);\n    }\n  }, []);\n\n  const update = (idx: number, newValue: string) => {\n    setpick([\n      ...pick.slice(0, idx),\n      newValue,\n      ...pick.slice(idx + 1),\n    ] as Melody);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"logo\">Animal Crossing Tunes Studio</h1>\n      <section className=\"social-media\">\n        <a\n          href=\"https://twitter.com/actunesstudio\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <i className=\"fab fa-twitter\"></i>\n        </a>\n      </section>\n      <section className=\"picker\">\n        <Picker onChange={update} melody={pick} />\n      </section>\n\n      <section className=\"player\">\n        <div>\n          <Button\n            onClick={() => player.play(pick)}\n            disabled={player.isPlaying()}\n          >\n            <i className=\"fas fa-play\"></i>&nbsp;Play\n          </Button>\n\n          <Button onClick={() => player.stop()} disabled={!player.isPlaying()}>\n            <i className=\"fas fa-stop\"></i>&nbsp;Stop\n          </Button>\n\n          <Button\n            onClick={() => {\n              const serialized = serialize(pick);\n              navigator.clipboard\n                .writeText(\n                  `${window.location.protocol}//${window.location.host}/?play=${serialized}`\n                )\n                .then(() => setIsCopied(true));\n            }}\n            disabled={false}\n          >\n            <i className=\"fas fa-share\"></i>&nbsp;Share\n          </Button>\n\n          <div className={clsx({ confirmation: true, visible: isCopied })}>\n            <i className=\"fas fa-check\"></i>&nbsp; Link copied to clipboard!\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport * as Tone from \"tone\";\nimport { Melody, transform } from \"./transform\";\n\ninterface Player {\n  isPlaying(): boolean;\n  play(melody: Melody): void;\n  stop(): void;\n}\n\nexport default function usePlayer(): Player {\n  const [synth, setSynth] = useState<Tone.AMSynth>();\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    Tone.start();\n    Tone.Transport.bpm.value = 60;\n    Tone.Transport.stop();\n    const _synth = new Tone.AMSynth({\n      envelope: {\n        attack: 0.09,\n        decay: 0.0795,\n        release: 0.1,\n        releaseCurve: \"step\",\n      },\n    }).toDestination();\n    setSynth(_synth);\n  }, []);\n\n  return {\n    isPlaying: () => isPlaying,\n    play: (melody: Melody) => {\n      Tone.start();\n      Tone.Transport.stop();\n\n      Tone.Transport.scheduleOnce((t) => {\n        Tone.Transport.cancel(0);\n        Tone.Transport.stop();\n        setIsPlaying(false);\n      }, \"+0:0:32\");\n\n      transform(melody)\n        .map((s) => {\n          return {\n            note: s.note,\n            duration: `0:0:${s.duration * 0.75}`,\n            time: `+0:0:${s.time}`,\n          };\n        })\n        .forEach((n) =>\n          Tone.Transport.scheduleOnce((t) => {\n            synth!.triggerAttackRelease(n.note, n.duration);\n          }, n.time)\n        );\n\n      setIsPlaying(true);\n      Tone.Transport.start();\n    },\n    stop: () => {\n      Tone.Transport.stop();\n      setIsPlaying(false);\n    },\n  };\n}\n","export type Sound = {\n  note: string;\n  time: number; // in 16ths\n  duration: number; // in 16ths\n};\n\nexport type Note =\n  | \"E5\"\n  | \"E5\"\n  | \"D5\"\n  | \"C5\"\n  | \"B4\"\n  | \"A4\"\n  | \"G4\"\n  | \"F4\"\n  | \"E4\"\n  | \"D4\"\n  | \"C4\"\n  | \"B3\"\n  | \"A3\"\n  | \"G3\"\n  | \"-\"\n  | \"x\";\n\nexport type Melody = [\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note\n]; // 16 notes\n\nexport function transform(values: Melody): Sound[] {\n  let result: Sound[] = [];\n\n  let currentTime = 0; // sixteenths\n\n  for (let i = 0; i < values.length; i++) {\n    if (values[i] === \"x\") {\n      currentTime += 2;\n    } else if (values[i] === \"-\") {\n      if (result.length > 0) {\n        result[result.length - 1].duration += 2;\n      }\n      currentTime += 2;\n    } else {\n      result.push({\n        note: values[i],\n        time: currentTime,\n        duration: 2,\n      });\n      currentTime += 2;\n    }\n  }\n  return result;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}