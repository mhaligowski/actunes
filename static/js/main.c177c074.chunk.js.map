{"version":3,"sources":["picker/arrow/Arrow.tsx","picker/note/Note.tsx","picker/Picker.tsx","serialize.ts","Button.tsx","App.tsx","usePlayer.tsx","transform.ts","reportWebVitals.ts","index.tsx"],"names":["Arrow","direction","disabled","onClick","className","clsx","CLASSMAP","x","G3","A3","B3","C4","D4","E4","F4","G4","A4","B4","C5","D5","E5","Note","onUp","onDown","value","noteClassName","data-name","newValue","Tone","transpose","toNote","indexOf","Picker","melody","onChange","pickersCells","map","idx","order","SERIALMAP","DESERIALMAP","Object","keys","reduce","acc","cv","Button","props","children","App","useState","pick","setpick","player","synth","setSynth","useEffect","bpm","isPlaying","play","_synth","envelope","attack","decay","release","releaseCurve","toDestination","onsilence","i","disconnect","dispose","cancel","stop","undefined","values","result","currentTime","length","push","pitch","start","transform","forEach","note","triggerAttackRelease","usePlayer","params","URLSearchParams","window","location","search","has","split","n","deserialize","get","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c177c074.chunk.js","sourcesContent":["import clsx from \"clsx\";\nimport React from \"react\";\nimport \"./arrow.css\";\n\ntype ArrowProps = {\n  direction: \"up\" | \"down\";\n  disabled?: boolean;\n  onClick: () => void;\n};\n\nexport default function Arrow({\n  direction,\n  disabled = false,\n  onClick,\n}: ArrowProps) {\n  return (\n    <button\n      className={clsx(\"Arrow\", direction)}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      <i className={clsx(\"fas\", `fa-angle-double-${direction}`)}></i>\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport clsx from \"clsx\";\nimport * as Tone from \"tone\";\nimport Arrow from \"../arrow/Arrow\";\n\nimport \"./note.scss\";\n\nconst CLASSMAP: { [name: string]: string } = {\n  x: \"x\",\n  \"-\": \"r\",\n  G3: \"g\",\n  A3: \"a\",\n  B3: \"b\",\n  C4: \"c\",\n  D4: \"d\",\n  E4: \"e\",\n  F4: \"f\",\n  G4: \"G\",\n  A4: \"A\",\n  B4: \"B\",\n  C5: \"C\",\n  D5: \"D\",\n  E5: \"E\",\n};\n\ntype NoteProps = {\n  onUp: (newValue: string) => void;\n  onDown: (newValue: string) => void;\n  value: string;\n  order: number;\n};\n\nconst Note = ({ onUp, onDown, value }: NoteProps) => {\n  const goUp = () => {\n    if (value === \"x\") {\n      onUp(\"-\");\n    } else if (value === \"-\") {\n      onUp(\"G3\");\n    } else if (value === \"E5\") {\n    } else {\n      let newValue = Tone.Frequency(value);\n      do {\n        newValue = newValue.transpose(1);\n      } while (newValue.toNote().indexOf(\"#\") !== -1);\n      onUp(newValue.toNote());\n    }\n  };\n\n  const goDown = () => {\n    if (value === \"G3\") {\n      onDown(\"-\");\n    } else if (value === \"-\") {\n      onDown(\"x\");\n    } else if (value === \"x\") {\n    } else {\n      let newValue = Tone.Frequency(value);\n      do {\n        newValue = newValue.transpose(-1);\n      } while (newValue.toNote().indexOf(\"#\") !== -1);\n      onUp(newValue.toNote());\n    }\n  };\n\n  const noteClassName: string = CLASSMAP[value];\n  return (\n    <div className={clsx(\"Note\", noteClassName)} data-name={value}>\n      <Arrow onClick={goUp} direction={\"up\"} disabled={value === \"E5\"} />\n      <Arrow onClick={goDown} direction={\"down\"} disabled={value === \"x\"} />\n    </div>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\nimport { Melody } from \"../transform\";\nimport Note from \"./note/Note\";\n\nimport \"./picker.scss\";\n\ntype PickerProps = {\n  melody: Melody;\n  onChange: (idx: number, newValue: string) => void;\n};\n\nexport default function Picker({ melody, onChange }: PickerProps) {\n  const pickersCells = melody.map((value, idx) => (\n    <Note\n      onDown={(newValue: string) => onChange(idx, newValue)}\n      onUp={(newValue: string) => onChange(idx, newValue)}\n      value={value}\n      key={idx}\n      order={idx}\n    />\n  ));\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"Picker-inner\">{pickersCells}</div>\n    </div>\n  );\n}\n","import { Melody } from \"./transform\";\n\ntype SerializationMap = { [note: string]: string };\n\nconst SERIALMAP: SerializationMap = {\n  x: \"x\",\n  \"-\": \"r\",\n  G3: \"g\",\n  A3: \"a\",\n  B3: \"b\",\n  C4: \"c\",\n  D4: \"d\",\n  E4: \"e\",\n  F4: \"f\",\n  G4: \"G\",\n  A4: \"A\",\n  B4: \"B\",\n  C5: \"C\",\n  D5: \"D\",\n  E5: \"E\",\n};\n\nconst DESERIALMAP: SerializationMap = Object.keys(SERIALMAP).reduce(\n  (acc: SerializationMap, cv: string) => {\n    acc[SERIALMAP[cv]] = cv;\n    return acc;\n  },\n  {} as SerializationMap\n);\n\nconst serialize = (melody: Melody): string =>\n  melody.map((n) => SERIALMAP[n]).join();\n\nconst deserialize = (melody: string): Melody | null => {\n  if (melody.length === 16) {\n    return melody.split(\"\").map((n) => DESERIALMAP[n]) as Melody;\n  } else {\n    return null;\n  }\n};\n\nexport { serialize, deserialize };\n","import \"./button.scss\";\n\ntype ButtonProps = {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  disabled: boolean;\n  children: string;\n};\nexport function Button(props: ButtonProps) {\n  return (\n    <button\n      onClick={props.onClick}\n      disabled={props.disabled}\n      className=\"Button\"\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Melody } from \"./transform\";\nimport Picker from \"./picker/Picker\";\n\nimport \"minireset.css/minireset.sass\";\nimport \"./App.scss\";\nimport usePlayer from \"./usePlayer\";\nimport { useEffect } from \"react\";\nimport { deserialize } from \"./serialize\";\nimport { Button } from \"./Button\";\n\nfunction App() {\n  // const init: Melody = Array(16).fill(\"x\") as Melody;\n\n  // ALL\n  // const init: Melody = [\n  //   \"E5\",\n  //   \"E5\",\n  //   \"D5\",\n  //   \"C5\",\n  //   \"B4\",\n  //   \"A4\",\n  //   \"G4\",\n  //   \"F4\",\n  //   \"E4\",\n  //   \"D4\",\n  //   \"C4\",\n  //   \"B3\",\n  //   \"A3\",\n  //   \"G3\",\n  //   \"-\",\n  //   \"x\",\n  // ];\n\n  const init: Melody = [\n    \"x\",\n    \"-\",\n    \"G3\",\n    \"A3\",\n    \"B3\",\n    \"C4\",\n    \"D4\",\n    \"E4\",\n    \"F4\",\n    \"G4\",\n    \"A4\",\n    \"B4\",\n    \"C5\",\n    \"D5\",\n    \"E5\",\n    \"E5\",\n  ];\n  const [pick, setpick] = useState<Melody>(init);\n  const player = usePlayer();\n\n  // On load parse the query string to see if it contains the serialized melody. No cleanup needed.\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    if (params.has(\"play\")) {\n      const melody = deserialize(params.get(\"play\")!);\n      if (melody) setpick(melody);\n    }\n  }, []);\n\n  const update = (idx: number, newValue: string) => {\n    setpick([\n      ...pick.slice(0, idx),\n      newValue,\n      ...pick.slice(idx + 1),\n    ] as Melody);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"logo\">Animal Crossing Tunes Studio</h1>\n      <section className=\"picker\">\n        <Picker onChange={update} melody={pick} />\n      </section>\n\n      <section className=\"player\">\n        <div>\n          <Button\n            onClick={() => player.play(pick)}\n            disabled={player.isPlaying()}\n          >\n            Play\n          </Button>\n          <Button onClick={() => player.stop()} disabled={!player.isPlaying()}>\n            Stop\n          </Button>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport * as Tone from \"tone\";\nimport { Melody, transform } from \"./transform\";\n\ninterface Player {\n  isPlaying(): boolean;\n  play(melody: Melody): void;\n  stop(): void;\n}\n\nexport default function usePlayer(): Player {\n  const [synth, setSynth] = useState<Tone.AMSynth>();\n\n  useEffect(() => {\n    Tone.Transport.bpm.value = 100;\n  }, []);\n\n  return {\n    isPlaying: () => {\n      return !(synth == null);\n    },\n    play: (melody: Melody) => {\n      const _synth = new Tone.AMSynth({\n        envelope: {\n          attack: 0.09,\n          decay: 0.0795,\n          release: 0.2,\n          releaseCurve: \"step\",\n        },\n      }).toDestination();\n\n      _synth.onsilence = (i) => {\n        i.disconnect();\n        i.dispose();\n        Tone.Transport.cancel();\n        Tone.Transport.stop();\n        setSynth(undefined);\n      };\n\n      const durationMultiplier = 0.8;\n      transform(melody).forEach((note) => {\n        _synth.triggerAttackRelease(\n          note.pitch,\n          `0:0:${note.value * durationMultiplier}`,\n          `+0:0:${note.start}`\n        );\n      });\n\n      setSynth(_synth);\n    },\n    stop: () => {\n      synth!.disconnect();\n      synth!.dispose();\n\n      Tone.Transport.cancel();\n      Tone.Transport.stop();\n      setSynth(undefined);\n    },\n  };\n}\n","export type Sound = {\n  pitch: string;\n  start: number; // in 16ths\n  value: number; // in 16ths\n};\n\nexport type Note =\n  | \"E5\"\n  | \"E5\"\n  | \"D5\"\n  | \"C5\"\n  | \"B4\"\n  | \"A4\"\n  | \"G4\"\n  | \"F4\"\n  | \"E4\"\n  | \"D4\"\n  | \"C4\"\n  | \"B3\"\n  | \"A3\"\n  | \"G3\"\n  | \"-\"\n  | \"x\";\n\nexport type Melody = [\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note,\n  Note\n]; // 16 notes\n\nexport function transform(values: Melody): Sound[] {\n  let result: Sound[] = [];\n\n  let currentTime = 0; // sixteenths\n\n  for (let i = 0; i < values.length; i++) {\n    if (values[i] === \"x\") {\n      currentTime += 2;\n    } else if (values[i] === \"-\") {\n      if (result.length > 0) {\n        result[result.length - 1].value += 2;\n      }\n      currentTime += 2;\n    } else {\n      result.push({\n        pitch: values[i],\n        start: currentTime,\n        value: 2,\n      });\n      currentTime += 2;\n    }\n  }\n  return result;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}