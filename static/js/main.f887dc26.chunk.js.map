{"version":3,"sources":["Picker.tsx","transform.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Picker","onUp","onDown","value","onClick","newValue","Tone","transpose","toNote","indexOf","disabled","style","display","transform","values","result","currentTime","i","length","push","pitch","start","App","useState","Array","fill","pick","setpick","update","slice","className","console","log","synth","toDestination","bpm","forEach","note","triggerAttackRelease","map","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAmDeA,EA3CA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,MA6B9B,OACE,gCACE,wBAAQC,QA9BC,WACX,GAAc,MAAVD,EACFF,EAAK,UACA,GAAc,MAAVE,EACTF,EAAK,UACA,CACL,IAAII,EAAWC,IAAeH,GAC9B,GACEE,EAAWA,EAASE,UAAU,UACa,IAApCF,EAASG,SAASC,QAAQ,MACnCR,EAAKI,EAASG,YAoBSE,SAAoB,OAAVP,EAAjC,gBAIA,qBAAKQ,MAAO,CAAEC,QAAS,UAAvB,SAAoCT,IACpC,wBAAQC,QArBG,WACb,GAAc,OAAVD,EACFD,EAAO,UACF,GAAc,MAAVC,EACTD,EAAO,SACF,CACL,IAAIG,EAAWC,IAAeH,GAC9B,GACEE,EAAWA,EAASE,WAAW,UACY,IAApCF,EAASG,SAASC,QAAQ,MACnCR,EAAKI,EAASG,YAWWE,SAAoB,MAAVP,EAAnC,sBCtCC,SAASU,EAAUC,GAKxB,IAJA,IAAIC,EAAiB,GAEjBC,EAAc,EAETC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IACf,MAAdH,EAAOG,GACTD,GAAe,EACQ,MAAdF,EAAOG,IAChBF,EAAOA,EAAOG,OAAS,GAAGf,OAAS,EACnCa,GAAe,IAEfD,EAAOI,KAAK,CACVC,MAAON,EAAOG,GACdI,MAAOL,EACPb,MAAO,IAETa,GAAe,GAGnB,OAAOD,ECkBMO,MAtCf,WAAgB,IAAD,EACWC,mBAASC,MAAM,IAAIC,KAAK,OADnC,mBACNC,EADM,KACAC,EADA,KAGPC,EAAS,SAACvB,EAAkBY,GAChCU,EAAQ,GAAD,mBAAKD,EAAKG,MAAM,EAAGZ,IAAnB,CAAuBZ,GAAvB,YAAoCqB,EAAKG,MAAMZ,EAAI,OAG5D,OACE,sBAAKa,UAAU,MAAf,UACE,8BACE,wBACE1B,QAAS,WACP2B,QAAQC,IAAIN,GACZK,QAAQC,IAAInB,EAAUa,IACtB,IAAMO,GAAQ,IAAI3B,KAAe4B,gBACjC5B,IAAe6B,IAAIhC,MAAQ,IAE3BU,EAAUa,GAAMU,SAAQ,SAACC,GACvBJ,EAAMK,qBAAqBD,EAAKjB,MAAhC,cAA8CiB,EAAKlC,OAAnD,eAAoEkC,EAAKhB,YAR/E,oBAgBDK,EAAKa,KAAI,SAACpC,EAAOqC,GAAR,OACR,cAAC,EAAD,CACEtC,OAAQ,SAACG,GAAD,OAAcuB,EAAOvB,EAAUmC,IACvCvC,KAAM,SAACI,GAAD,OAAcuB,EAAOvB,EAAUmC,IACrCrC,MAAOA,GACFqC,UCvBAC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f887dc26.chunk.js","sourcesContent":["import * as Tone from \"tone\";\n\ntype PickerType = {\n  onUp: (newValue: string) => void;\n  onDown: (newValue: string) => void;\n  value: string;\n};\n\nconst Picker = ({ onUp, onDown, value }: PickerType) => {\n  const goUp = () => {\n    if (value === \"x\") {\n      onUp(\"-\");\n    } else if (value === \"-\") {\n      onUp(\"G2\");\n    } else {\n      let newValue = Tone.Frequency(value);\n      do {\n        newValue = newValue.transpose(1);\n      } while (newValue.toNote().indexOf(\"#\") !== -1);\n      onUp(newValue.toNote());\n    }\n  };\n\n  const goDown = () => {\n    if (value === \"G2\") {\n      onDown(\"-\");\n    } else if (value === \"-\") {\n      onDown(\"x\");\n    } else {\n      let newValue = Tone.Frequency(value);\n      do {\n        newValue = newValue.transpose(-1);\n      } while (newValue.toNote().indexOf(\"#\") !== -1);\n      onUp(newValue.toNote());\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={goUp} disabled={value === \"E5\"}>\n        up\n      </button>\n\n      <div style={{ display: \"inline\" }}>{value}</div>\n      <button onClick={goDown} disabled={value === \"x\"}>\n        down\n      </button>\n    </div>\n  );\n};\n\nexport default Picker;\n","export type Note = {\n  pitch: string;\n  start: number; // in 16ths\n  value: number; // in 16ths\n};\n\nexport function transform(values: string[]): Note[] {\n  let result: Note[] = [];\n\n  let currentTime = 0; // sixteenths\n\n  for (let i = 0; i < values.length; i++) {\n    if (values[i] === \"x\") {\n      currentTime += 2;\n    } else if (values[i] === \"-\") {\n      result[result.length - 1].value += 2;\n      currentTime += 2;\n    } else {\n      result.push({\n        pitch: values[i],\n        start: currentTime,\n        value: 2,\n      });\n      currentTime += 2;\n    }\n  }\n  return result;\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport * as Tone from \"tone\";\nimport Picker from \"./Picker\";\nimport { transform } from \"./transform\";\n\nfunction App() {\n  const [pick, setpick] = useState(Array(16).fill(\"C4\"));\n\n  const update = (newValue: string, i: number) => {\n    setpick([...pick.slice(0, i), newValue, ...pick.slice(i + 1)]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <button\n          onClick={() => {\n            console.log(pick);\n            console.log(transform(pick));\n            const synth = new Tone.AMSynth().toDestination();\n            Tone.Transport.bpm.value = 100;\n\n            transform(pick).forEach((note) => {\n              synth.triggerAttackRelease(note.pitch, `0:0:${note.value}`, `+0:0:${note.start}`);\n            });\n          }}\n        >\n          play\n        </button>\n      </div>\n\n      {pick.map((value, idx) => (\n        <Picker\n          onDown={(newValue) => update(newValue, idx)}\n          onUp={(newValue) => update(newValue, idx)}\n          value={value}\n          key={idx}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}